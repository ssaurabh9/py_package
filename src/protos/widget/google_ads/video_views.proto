syntax = "proto3";

package strique.model.widget.google_ads;

import "types/currency/currency.proto";
import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";

option java_package = "com.strique.model.widget.googleads";
option java_outer_classname = "VideoViewsProto";

// Next Id: 5
// Proto definition for Video Views Data.
message VideoViewsData {
    // Title for this widget.
    string widget_title = 1;

    // List of records for this widget.
    repeated VideoViewsRecord records = 2;

    // Total record.
    optional VideoViewsRecord total = 3;

    // Summary data for a subset of records.
    optional VideoViewsRecord subtotal = 4;
}

// Next Id: 10
// Proto definition for a single record of Video Views.
message VideoViewsRecord {
  // Video name or identifier.
  string video_name = 1;

  // Cost incurred for the video views.
  types.Currency cost = 2;

  // Number of views.
  uint64 views = 3;

  // Average cost per view (CPV).
  types.Currency average_cost_per_view = 4;

  // Video view rate.
  // Percentage of impressions that resulted in a view.
  double video_view_rate = 5;

  // Percentage of the video played up to 25%.
  double video_played_25 = 6;

  // Percentage of the video played up to 50%.
  double video_played_50 = 7;

  // Percentage of the video played up to 75%.
  double video_played_75 = 8;

  // Percentage of the video played up to 100%.
  double video_played_100 = 9;
}

// Next Id: 3
// Proto definition for Video Views Configuration.
message VideoViewsConfig {
    // Next Id: 10
    // Enumeration of possible columns in the Video Views table.
    enum Column {
      COLUMN_UNKNOWN = 0;
      COLUMN_VIDEO_NAME = 1;
      COLUMN_COST = 2;
      COLUMN_VIEWS = 3;
      COLUMN_AVERAGE_COST_PER_VIEW = 4;
      COLUMN_VIDEO_VIEW_RATE = 5;
      COLUMN_VIDEO_PLAYED_25 = 6;
      COLUMN_VIDEO_PLAYED_50 = 7;
      COLUMN_VIDEO_PLAYED_75 = 8;
      COLUMN_VIDEO_PLAYED_100 = 9;
    }

    // Next Id: 7
    // Configuration for the table displayed in the Video Views.
    message TableConfig {
        // Specifies the order of columns in the table.
        repeated Column column_order = 1;

        // Specifies columns to be hidden in the table.
        repeated Column column_hidden = 2;

        // Specifies the default column used for sorting.
        Column default_sorted_column = 3;

        // Specifies the sorting direction.
        constants.ui.SortingDirection sorting_direction = 4;

        // Indicates whether to display the total row in the table.
        bool show_total = 5;

        // Indicates whether to display the subtotal row in the table.
        bool show_subtotal = 6;
    }

    // Specifies the type of rendering for the widget.
    constants.ui.RenderType render_type = 1;

    // Configuration for the table displayed in the widget.
    TableConfig table_config = 2;
}
